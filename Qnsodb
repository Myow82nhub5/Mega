local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local targetLockEnabled = false
local cameraLockEnabled = false
local targetPlayer = nil
local horizontalPrediction = 0
local verticalPrediction = 0

-- Create the GUI elements
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Create a main frame for the GUI
local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0.25, 0, 0.6, 0) -- Increased height for additional controls
mainFrame.Position = UDim2.new(0.8, 0, 0.1, 0) -- Positioned in the top right corner
mainFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45) -- Dark background color
mainFrame.BorderSizePixel = 0

-- Add rounded corners to the main frame
local mainCorner = Instance.new("UICorner", mainFrame)
mainCorner.CornerRadius = UDim.new(0, 10)

-- Function to create buttons with rounded corners
local function createButton(text, position)
    local button = Instance.new("TextButton", mainFrame)
    button.Size = UDim2.new(1, 0, 0.1, 0) -- Full width, 10% height
    button.Position = position -- Position the button
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60) -- Button color
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSans
    button.TextSize = 24
    button.BorderSizePixel = 0 -- No border

    -- Add rounded corners to the button
    local buttonCorner = Instance.new("UICorner", button)
    buttonCorner.CornerRadius = UDim.new(0, 10)

    return button
end

-- Function to create text input boxes with rounded corners
local function createTextBox(position)
    local textBox = Instance.new("TextBox", mainFrame)
    textBox.Size = UDim2.new(0.8, 0, 0.1, 0) -- Width 80%, height 10%
    textBox.Position = position -- Position the textbox
    textBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- White background
    textBox.TextColor3 = Color3.fromRGB(0, 0, 0) -- Black text
    textBox.Font = Enum.Font.SourceSans
    textBox.PlaceholderText = "Enter Value"
    textBox.TextSize = 24
    textBox.ClearTextOnFocus = true -- Clear text when focused

    -- Add rounded corners to the textbox
    local textBoxCorner = Instance.new("UICorner", textBox)
    textBoxCorner.CornerRadius = UDim.new(0, 10)

    return textBox
end

-- Create the target lock and camera lock buttons
local targetLockButton = createButton("Toggle Target Lock", UDim2.new(0, 0, 0, 0))
local cameraLockButton = createButton("Toggle Camera Lock", UDim2.new(0, 0, 0.2, 0))

-- Create text boxes for horizontal and vertical prediction
local horizontalPredictionBox = createTextBox(UDim2.new(0, 0, 0.3, 0))
horizontalPredictionBox.Name = "HorizontalPredictionBox"
horizontalPredictionBox.PlaceholderText = "Horizontal Prediction"

local verticalPredictionBox = createTextBox(UDim2.new(0, 0, 0.4, 0))
verticalPredictionBox.Name = "VerticalPredictionBox"
verticalPredictionBox.PlaceholderText = "Vertical Prediction"

-- Function to toggle target lock
local function toggleTargetLock()
    targetLockEnabled = not targetLockEnabled
    if targetLockEnabled then
        targetLockButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green if enabled
        print("Target Lock Enabled")
        
        -- Lock onto the nearest player
        local nearestPlayer = nil
        local nearestDistance = math.huge
        
        for _, otherPlayer in pairs(game.Players:GetPlayers()) do
            if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (player.Character.HumanoidRootPart.Position - otherPlayer.Character.HumanoidRootPart.Position).Magnitude
                if distance < nearestDistance then
                    nearestDistance = distance
                    nearestPlayer = otherPlayer
                end
            end
        end
        
        targetPlayer = nearestPlayer
        if targetPlayer then
            print("Targeting: " .. targetPlayer.Name)
        end
    else
        targetLockButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60) -- Default color if disabled
        targetPlayer = nil
        print("Target Lock Disabled")
    end
end

-- Function to toggle camera lock
local function toggleCameraLock()
    cameraLockEnabled = not cameraLockEnabled
    if cameraLockEnabled then
        cameraLockButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green if enabled
        print("Camera Lock Enabled")
    else
        cameraLockButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60) -- Default color if disabled
        print("Camera Lock Disabled")
    end
end

-- Function to hit the target player
local function hitTargetPlayer()
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") then
        local humanoid = targetPlayer.Character.Humanoid
        humanoid:TakeDamage(10) -- Deal 10 damage, change this value as needed
        print("Hit: " .. targetPlayer.Name)
    end
end

-- Function to update the camera lock position
local function updateCamera()
    if cameraLockEnabled and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetPosition = targetPlayer.Character.HumanoidRootPart.Position

        -- Get the horizontal and vertical prediction values from the input boxes
        horizontalPrediction = tonumber(horizontalPredictionBox.Text) or 0
        verticalPrediction = tonumber(verticalPredictionBox.Text) or 0

        -- Apply horizontal and vertical prediction to the target position
        targetPosition = targetPosition + Vector3.new(horizontalPrediction, verticalPrediction, 0)

        -- Update the camera position
        workspace.CurrentCamera.CFrame = CFrame.new(targetPosition + Vector3.new(0, 5, 10), targetPosition)
        
        -- Hit the target player
        hitTargetPlayer()
    end
end

-- Connect button clicks to functions
targetLockButton.MouseButton1Click:Connect(toggleTargetLock)
cameraLockButton.MouseButton1Click:Connect(toggleCameraLock)

-- Update the camera continuously when camera lock is enabled
game:GetService("RunService").RenderStepped:Connect(updateCamera)
